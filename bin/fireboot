#!/bin/bash

init_network_config() {
  _rc=0
  redis-cli set "fireboot:status" "apply_network"
  echo "Awaiting FireRouter API available ..."
  sleep 3
  timeout=3
  api_ready=0
  while [[ timeout -gt 0 && api_ready -eq 0 ]]
  do
    HTTP_STATUS_CODE=`curl -s -o /dev/null -w "%{http_code}" 'http://localhost:8837/v1/config/phy_interfaces' -XGET`
    if [[ $HTTP_STATUS_CODE != 200 ]]; then
      sleep 10
    else
      api_ready=1
    fi
    ((timeout-=1))
  done

  if [[ $api_ready -eq 0 ]]; then
    _rc=1
  fi

  test $_rc -eq  0 || exit $_rc
  echo "FireRouter API is available"

  redis-cli set "fireboot:status" "apply_network"
  echo "Applying last successful network config ..."

  HTTP_STATUS_CODE=`curl -s -o /dev/null -w "%{http_code}" 'http://localhost:8837/v1/config/prepare_env' -XPOST -H 'Content-Type: application/json' -d {}`
  if [[ $HTTP_STATUS_CODE != "200" ]]; then
    echo "Failed to prepare environment"
    _rc=2
  fi

  test $_rc -eq  0 || exit $_rc

  HTTP_STATUS_CODE=`curl -s -o /dev/null -w "%{http_code}" 'http://localhost:8837/v1/config/apply_current_config' -XPOST -H 'Content-Type: application/json' -d {}`
  if [[ $HTTP_STATUS_CODE != "200" ]]; then
    echo "Failed to apply current config"
    _rc=2
  fi

  test $_rc -eq  0 || exit $_rc

  echo "Successfully apply last network config"

  redis-cli set "fireboot:status" "test_network"
  echo "Testing network connectivity ..."
  nc -z 1.1.1.1 443 || (echo "err: network is unavailable" && _rc=3)
  dig github.com || (echo "err: dns is unavailable" && _rc=4)

  test $_rc -eq  0 || exit $_rc
  echo "Network connectivity test succeeded"
}

# step 1 - init network config
echo "Restarting FireRouter ..."
sudo systemctl restart firerouter
init_network_config

# step 2 - upgrade firerouter
redis-cli set "fireboot:status" "firerouter_upgrade"
echo "Upgrading FireRouter ..."


# step 3 - restart firerouter and init network config again
echo "Restarting FireRouter ..."
sudo systemctl restart firerouter
init_network_config

# TBD upgrade firerouter itself

# step 4 - start fireupgrade
redis-cli set "fireboot:status" "fireupgrade"
echo "Starting Fireupgrade ..."
sudo systemctl start fireupgrade

# step 5 - start fireupgrade
redis-cli set "fireboot:status" "firewalla"
echo "Starting Firewalla ..."
sudo systemctl start firewalla

redis-cli set "fireboot:status" "firewalla_service_done"

exit 0
