#!/bin/bash

metric=${ifmetric:-'1024'}
mtu=${ifmtu:-'1500'}

if [ -z "$rt_tables" ]; then
    rt_tables="main"
fi

if [ -z "$default_rt_tables" ]; then
    default_rt_tables="main"
fi

ip_changed=""

case $reason in

  ROUTERADVERT)
    new_addrs="";
    addr_id=1
    while [ $addr_id -lt 10 ]; do
      var_name="nd1_addr$addr_id"
      prefix_length_var_name="nd1_prefix_information${addr_id}_length"
      eval "prefix_length=\$$prefix_length_var_name"
      echo "haha $prefix_length"
      eval "addr=\$$var_name"
      if [ -n "$addr" && $prefix_length -ge 64 ]; then
        new_addrs="$new_addrs$addr,"
        for rt_table in $rt_tables; do
          sudo ip -6 r add $addr dev $interface metric $metric mtu $mtu table $rt_table
        done
      else
        break;
      fi
      addr_id=$((addr_id + 1))
    done

    if [ -n "$nd1_from" ]; then
      for default_rt_table in $default_rt_tables; do
        sudo ip -6 r replace default via $nd1_from dev $interface mtu $mtu table $default_rt_table
      done
      old_gw=`cat /dev/shm/dhcpcd.gw6.$interface 2>/dev/null || echo ""`
      if [ "$nd1_from" != "$old_gw" ]; then
        echo $nd1_from > /dev/shm/dhcpcd.gw6.$interface
        ip_changed="1"
      fi
    fi
    old_addrs=`cat /dev/shm/dhcpcd.ip6.$interface 2>/dev/null || echo ""`
    if [ "$new_addrs" != "$old_addrs" ]; then
      echo $new_addrs > /dev/shm/dhcpcd.ip6.$interface
      ip_changed="1"
    fi
    ;;
  BOUND6|REBOOT6)
    addr_id=1
    while [ $addr_id -lt 10 ]; do
      old_var_name="old_dhcp6_ia_na1_ia_addr$addr_id"
      eval "old_addr=\$$old_var_name"
      new_var_name="new_dhcp6_ia_na1_ia_addr$addr_id"
      status_code_name="new_dhcp6_ia_na1_ia_addr${addr_id}_status_code"
      eval "status_code=\$$status_code_name"
      if [ "$status_code" = "2" ]; then
        addr_id=$((addr_id + 1))
        continue
      fi
      eval "new_addr=\$$new_var_name"
      if [ -n "$new_addr" ]; then
        ip_changed="1"
        for rt_table in $rt_tables; do
          sudo ip -6 r add $new_addr dev $interface metric $metric mtu $mtu table $rt_table
        done
      fi
      addr_id=$((addr_id + 1))
    done
    ;;
  RENEW6|REBIND6)
    # compare old address with new address
    addr_id=1
    while [ $addr_id -lt 10 ]; do
      old_var_name="old_dhcp6_ia_na1_ia_addr$addr_id"
      eval "old_addr=\$$old_var_name"
      new_var_name="new_dhcp6_ia_na1_ia_addr$addr_id"
      eval "new_addr=\$$new_var_name"
      if [ "$old_addr" != "$new_addr" ]; then
        ip_changed="1"
      fi
      if [ -n "$new_addr" ]; then
        for rt_table in $rt_tables; do
          sudo ip -6 r add $new_addr dev $interface metric $metric mtu $mtu table $rt_table
        done
      fi
      addr_id=$((addr_id + 1))
    done
    ;;
esac

if [ -n "$ip_changed" ]; then
  redis-cli -n 1 publish "dhcpcd6.ip_change" "$interface"
fi